#!/usr/bin/perl

use strict;
use warnings;

use Net::Telnet ();

sub read_status {
    my $modem_host     = $ENV{modem_host}     || die "No modem_host set\n";
    my $modem_password = $ENV{modem_password} || die "No modem_password set\n";

    my $remote = new Net::Telnet (Timeout => 10);
    $remote->open($modem_host);
    $remote->waitfor('/Account:/');
    $remote->print('admin');
    $remote->waitfor('/Password:/');
    $remote->print($modem_password);
    $remote->waitfor('/>/');
    my @lines = $remote->cmd("vdsl status");
	
    my $status;
    foreach my $loopvar (@lines)
    {
      $status .= "$loopvar\n" ;
    }

    return $status;
}

sub read_values {

    my $status = read_status;

    my %values;
    ($values{ds_rate}) = $status =~ /DS Actual Rate\s+:\s+(\d+)\s+bps/;
    ($values{ds_attainable_rate}) = $status =~ /DS Attainable Rate\s+:\s+(\d+)\s+bps/;
    ($values{us_rate}) = $status =~ /US Actual Rate\s+:\s+(\d+)\s+bps/;
    ($values{us_attainable_rate}) = $status =~ /US Attainable Rate\s+:\s+(\d+)\s+bps/;

    $values{ds_rate} /= 1000;
    $values{ds_attainable_rate} /= 1000;
    $values{us_rate} /= 1000;
    $values{us_attainable_rate} /= 1000;

    ($values{near_attenuation}) = $status =~ /NE Current Attenuation\s+:\s+(\d+)\s+dB/;
    ($values{near_snr_margin})  = $status =~ /Cur SNR Margin\s+:\s+(\d+)\s+dB/;
    ($values{near_psd})         = $status =~ /DS actual PSD\s+:\s+(-*\d+\.\s*-*\d+)\s+dB/;

    $values{near_psd} =~ s/\s//g;

    ($values{far_attenuation}) = $status =~ /Far Current Attenuation\s+:\s+(\d+)\s+dB/;
    ($values{far_snr_margin})  = $status =~ /Far SNR Margin\s+:\s+(\d+)\s+dB/;
    ($values{far_psd})         = $status =~ /US actual PSD\s+:\s+(\d+\.\s*\d+)\s+dB/;

    $values{far_psd} =~ s/\s//g;

    return \%values;
}

$0 =~ /vdslstatus_(.+)$/;
my $type = $1;
unless ( $1 eq 'speed' || $1 eq 'linestats' ) {
    die "Must be called as either 'vdslstatus_speed' or 'vdslstatus_linestats'\n";
}

if ( $ARGV[0] and $ARGV[0] eq "config" ) {

    print "graph_category VDSL\n";

    if ( $type eq 'speed' ) {
        print "graph_title Connection speeds\n";
        print "graph_vlabel kbps\n";
        print "graph_scale  no\n";
        print "downstream.label Downstream speed\n";
        print "downstream.draw LINE2\n";
        print "downstream_attainable.label Downstream attainable speed\n";
        print "downstream_attainable.draw LINE2\n";
        print "upstream.label Upstream speed\n";
        print "upstream.draw LINE2\n";
        print "upstream_attainable.label Upstream attainable speed\n";
        print "upstream_attainable.draw LINE2\n";
    } elsif ( $type eq 'linestats' ) {
        print "graph_title Line statistics\n";
        print "graph_vlabel dB\n";
        print "graph_scale  no\n";
        print "graph_info See http://www.kitz.co.uk/vdsl/index.htm for help interpreting these figures.\n";
        print "near_attenuation.label Downstream attenuation\n";
        print "near_attenuation.draw LINE2\n";
        print "near_attenuation.info Downstream attenuation, lower is better\n";
        print "near_snr_margin.label Downstream SNR margin\n";
        print "near_snr_margin.draw LINE2\n";
        print "near_snr_margin.info Downstream SNR margin, higher is better\n";
        print "near_psd.label Downstream PSD\n";
        print "near_psd.draw LINE2\n";
        print "near_psd.info Downstream power spectrum density\n";
        print "far_attenuation.label Upstream attenuation\n";
        print "far_attenuation.draw LINE2\n";
        print "far_attenuation.info Upstream attenuation, lower is better\n";
        print "far_snr_margin.label Upstream SNR margin\n";
        print "far_snr_margin.draw LINE2\n";
        print "far_snr_margin.info Upstream SNR margin, higher is better\n";
        print "far_psd.label Upstream PSD\n";
        print "far_psd.draw LINE2\n";
        print "far_psd.info Upstream power spectrum density\n";
    }
    exit 0;
}

my $values = read_values;

if ( $type eq 'speed' ) {

    print "downstream.value ".$values->{ds_rate}."\n";
    print "downstream_attainable.value ".$values->{ds_attainable_rate}."\n";
    print "upstream.value ".$values->{us_rate}."\n";
    print "upstream_attainable.value ".$values->{us_attainable_rate}."\n";

} elsif ( $type eq 'linestats' ) {

    print "near_attenuation.value ".$values->{near_attenuation}."\n";
    print "near_snr_margin.value ".$values->{near_snr_margin}."\n";
    print "near_psd.value ".$values->{near_psd}."\n";
    print "far_attenuation.value ".$values->{far_attenuation}."\n";
    print "far_snr_margin.value ".$values->{far_snr_margin}."\n";
    print "far_psd.value ".$values->{far_psd}."\n";
}
